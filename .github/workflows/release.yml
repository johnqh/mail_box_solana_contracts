name: Release to NPM

on:
  workflow_dispatch:    # Allow manual triggering
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Run linter
        run: npm run lint
      
      - name: Run security audit
        run: npm audit --audit-level critical || true
      
      - name: Build TypeScript library
        run: npm run build
      
      - name: Verify package structure
        run: |
          echo "✅ Verifying package structure..."
          [ -d "dist/app" ] && echo "✅ dist/app/ exists" || (echo "❌ dist/app/ missing" && exit 1)
          [ -f "dist/app/index.js" ] && echo "✅ Main entry point exists" || (echo "❌ Main entry point missing" && exit 1)
          [ -f "dist/app/index.d.ts" ] && echo "✅ Type definitions exist" || (echo "❌ Type definitions missing" && exit 1)
          
          echo "📦 Package contents:"
          npm pack --dry-run
      
      - name: Bump version and create tag
        id: version_bump
        run: |
          # Get current version
          OLD_VERSION=$(node -p "require('./package.json').version")
          
          # Bump version
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          
          # Get new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          
          echo "old_version=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
          
          echo "📈 Version bumped from $OLD_VERSION to $NEW_VERSION"
      
      - name: Publish to npm
        run: |
          echo "📦 Publishing @johnqh/mail_box_solana_contracts@${{ steps.version_bump.outputs.new_version }}"
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version_bump.outputs.new_version }}"
          git push
      
      - name: Create Git tag
        run: |
          git tag ${{ steps.version_bump.outputs.tag }} -m "Release ${{ steps.version_bump.outputs.tag }}"
          git push origin ${{ steps.version_bump.outputs.tag }}
      
      - name: Generate changelog
        id: changelog
        run: |
          echo "## 🚀 Release ${{ steps.version_bump.outputs.tag }}" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### 📋 Changes:" >> CHANGELOG.md
          
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            git log $LAST_TAG..HEAD^ --pretty=format:"- %s (%h)" --no-merges >> CHANGELOG.md
          else
            echo "- Initial release of TypeScript client library" >> CHANGELOG.md
          fi
          
          echo "" >> CHANGELOG.md
          echo "### 🔧 Installation:" >> CHANGELOG.md
          echo '```bash' >> CHANGELOG.md
          echo "npm install @johnqh/mail_box_solana_contracts@${{ steps.version_bump.outputs.new_version }}" >> CHANGELOG.md
          echo '```' >> CHANGELOG.md
          
          echo "" >> CHANGELOG.md
          echo "### 📦 Package Contents:" >> CHANGELOG.md
          echo "- **TypeScript Client Library** with full type definitions" >> CHANGELOG.md
          echo "- **MailServiceClient** - Domain registration and delegation" >> CHANGELOG.md  
          echo "- **MailerClient** - Message sending with revenue sharing" >> CHANGELOG.md
          echo "- **Utility functions** - USDC formatting, network configs" >> CHANGELOG.md
          echo "- **22 Unit Tests** - Comprehensive test coverage" >> CHANGELOG.md
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version_bump.outputs.tag }}
          name: Release ${{ steps.version_bump.outputs.tag }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Verify npm publication
        run: |
          sleep 30  # Wait for npm registry to sync
          PACKAGE_NAME="@johnqh/mail_box_solana_contracts"
          VERSION="${{ steps.version_bump.outputs.new_version }}"
          
          echo "🔍 Verifying publication..."
          npm view $PACKAGE_NAME@$VERSION
          
          echo ""
          echo "✅ Successfully published $PACKAGE_NAME@$VERSION!"
          echo "🔗 Available at: https://www.npmjs.com/package/$PACKAGE_NAME/v/$VERSION"
      
      - name: Create release summary
        run: |
          echo "## 🎉 Release Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Published Package:" >> $GITHUB_STEP_SUMMARY
          echo "- **Package**: \`@johnqh/mail_box_solana_contracts@${{ steps.version_bump.outputs.new_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Install**: \`npm install @johnqh/mail_box_solana_contracts@${{ steps.version_bump.outputs.new_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📚 Documentation:" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub Release**: [Release ${{ steps.version_bump.outputs.tag }}](https://github.com/${{ github.repository }}/releases/tag/${{ steps.version_bump.outputs.tag }})" >> $GITHUB_STEP_SUMMARY
          echo "- **NPM Package**: [npmjs.com/package/@johnqh/mail_box_solana_contracts](https://www.npmjs.com/package/@johnqh/mail_box_solana_contracts)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔧 Usage:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`typescript" >> $GITHUB_STEP_SUMMARY
          echo "import { MailServiceClient, MailerClient, formatUSDC } from '@johnqh/mail_box_solana_contracts';" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY